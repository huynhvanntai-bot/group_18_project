{
  "info": {
    "name": "Ho·∫°t ƒë·ªông 4 - Forgot Password & Reset Password API",
    "description": "Complete API testing cho forgot password feature - Group 18",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "admin1@gmail.com",
      "type": "string"
    },
    {
      "key": "resetToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üìß Forgot Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test(\"Response has message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/forgot-password",
          "host": ["{{baseUrl}}"],
          "path": ["forgot-password"]
        },
        "description": "SV1 (huynhvantai): Send forgot password email v·ªõi real Gmail SMTP"
      }
    },
    {
      "name": "üîë Reset Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test(\"Password reset successful\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('th√†nh c√¥ng');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newPassword\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/reset-password/{{resetToken}}",
          "host": ["{{baseUrl}}"],
          "path": ["reset-password", "{{resetToken}}"]
        },
        "description": "SV1 (huynhvantai): Reset password v·ªõi token t·ª´ email. \n\n‚ö†Ô∏è Update {{resetToken}} variable v·ªõi token t·ª´ email tr∆∞·ªõc khi test!"
      }
    },
    {
      "name": "‚ùå Forgot Password - Invalid Email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"nonexistent@email.com\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/forgot-password",
          "host": ["{{baseUrl}}"],
          "path": ["forgot-password"]
        },
        "description": "Test error handling cho email kh√¥ng t·ªìn t·∫°i"
      }
    },
    {
      "name": "‚ùå Reset Password - Invalid Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newPassword\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/reset-password/invalid-token-12345",
          "host": ["{{baseUrl}}"],
          "path": ["reset-password", "invalid-token-12345"]
        },
        "description": "Test error handling cho token kh√¥ng h·ª£p l·ªá"
      }
    },
    {
      "name": "üîê Login v·ªõi Password M·ªõi",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Login successful\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('th√†nh c√¥ng');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        },
        "description": "Test login v·ªõi password m·ªõi sau khi reset th√†nh c√¥ng"
      }
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script for collection",
          "console.log('üß™ Testing Ho·∫°t ƒë·ªông 4 - Forgot Password API');",
          "console.log('üë• Team: huynhvantai, phamquanghuy1661, nguyenquocvinh');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Post-response script for collection",
          "console.log('Response time: ' + pm.response.responseTime + 'ms');",
          "console.log('Status: ' + pm.response.status + ' ' + pm.response.reason());"
        ]
      }
    }
  ]
}