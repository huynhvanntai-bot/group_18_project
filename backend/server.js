// backend/server.js
require("dotenv").config();

const path = require("path");
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const userRoutes = require("./routes/userRoutes");
const authRoutes = require("./routes/auth");
const logsRoutes = require("./routes/logs");
const profileRoutes = require("./routes/profile");
const adminRoutes = require("./routes/adminRoutes"); // üÜï SV1: Admin routes
const avatarRoutes = require("./routes/avatarRoutes"); // üÜï SV1: Avatar routes

const app = express();
app.use(cors());
app.use(express.json());

// ‚úÖ Th√™m m·ªõi ‚Äì route test ƒë·ªÉ ki·ªÉm tra server ho·∫°t ƒë·ªông
app.get("/", (req, res) => {
  res.send("üî• Backend server ƒëang ho·∫°t ƒë·ªông!");
});

// Mount routes
app.use("/api", userRoutes);
app.use("/api", authRoutes);
app.use("/api/logs", logsRoutes);
app.use("/api/profile", profileRoutes);
app.use("/api/admin", adminRoutes); // üÜï SV1: Admin API routes
app.use("/api/users/avatar", avatarRoutes); // üÜï SV1: Avatar API routes

app.use("/uploads", express.static(path.join(__dirname, "uploads")));

const PORT = process.env.PORT || 5000;
mongoose
  .connect(process.env.MONGO_URI)
  .then(() => {
    console.log("‚úÖ K·∫øt n·ªëi MongoDB Atlas th√†nh c√¥ng");
    app.listen(PORT, () => console.log(`üöÄ Server ƒëang ch·∫°y ·ªü c·ªïng ${PORT}`));
  })
  .catch((err) => console.log("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", err));
